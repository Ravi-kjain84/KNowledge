def add_comparison_columns(df, comparison_columns):
    # Add comparison columns to the DataFrame
    for i, cols in enumerate(comparison_columns):
        col1, col2 = cols
        df[f'Comparison_{i}'] = df[col1] == df[col2]
    return df

# Example DataFrame and comparison setup
data = {'Column1': [1, 2, 3], 'Column2': [1, 2, 3], 'Column3': [1, 5, 3], 'Column4': [2, 2, 3]}
df = pd.DataFrame(data)
comparison_columns = [('Column1', 'Column2'), ('Column2', 'Column3'), ('Column3', 'Column4')]

# Add comparison results to DataFrame
df = add_comparison_columns(df, comparison_columns)


def export_to_excel_with_formatting(df, output_file):
    with pd.ExcelWriter(output_file, engine='xlsxwriter') as writer:
        df.to_excel(writer, sheet_name='Sheet1', index=False)
        workbook = writer.book
        worksheet = writer.sheets['Sheet1']
        
        # Define Excel formats for true (green) and false (red)
        format_true = workbook.add_format({'bg_color': 'green', 'font_color': 'white'})
        format_false = workbook.add_format({'bg_color': 'red', 'font_color': 'white'})

        # Get number of rows and columns
        max_row = len(df)
        max_col = len(df.columns)
        
        # Apply conditional formatting to each comparison column
        for i in range(len(comparison_columns)):
            comparison_col_index = max_col - len(comparison_columns) + i
            worksheet.conditional_format(1, comparison_col_index, max_row, comparison_col_index, {
                'type': 'cell',
                'criteria': '==',
                'value': True,
                'format': format_true
            })
            worksheet.conditional_format(1, comparison_col_index, max_row, comparison_col_index, {
                'type': 'cell',
                'criteria': '==',
                'value': False,
                'format': format_false
            })

        # Set the column width to fit the content
        for col_num in range(max_col):
            worksheet.set_column(col_num, col_num, 20)  # Adjust 20 or use a method to auto-determine width based on content

# Export the DataFrame with formatting to Excel
export_to_excel_with_formatting(df, 'formatted_output.xlsx')
