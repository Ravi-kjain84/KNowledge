import pandas as pd

def filter_and_merge_dataframes(df1, df2, common_columns, entity_column):
    # Group by common columns and sum values
    df1_grouped = df1.groupby(common_columns).sum().reset_index()
    df2_grouped = df2.groupby(common_columns).sum().reset_index()

    # Merge grouped dataframes on common columns
    merged_df = pd.merge(df1_grouped, df2_grouped, on=common_columns, suffixes=('_df1', '_df2'))

    # Filter rows where the sums are equal
    filtered_df = merged_df[merged_df['Amount_df1'] == merged_df['Amount_df2']]

    # Merge the filtered results with the original df1 to get the rows where the sums match
    final_df = pd.merge(filtered_df[common_columns], df1, on=common_columns)

    # Merge df1 and df2 on common columns to get the entity column
    df1_merged = df1[common_columns + [entity_column]]
    df2_merged = df2[common_columns + [entity_column]]

    # Combine the entities based on the common columns, giving preference to df1
    combined_df = pd.merge(df1_merged, df2_merged, on=common_columns, how='outer', suffixes=('_df1', '_df2'))

    # Apply the logic for the entity column
    combined_df[entity_column] = combined_df.apply(
        lambda row: row[f'{entity_column}_df1'] if pd.notna(row[f'{entity_column}_df1']) else row[f'{entity_column}_df2'],
        axis=1
    )

    # Drop the additional entity columns
    combined_df = combined_df.drop(columns=[f'{entity_column}_df1', f'{entity_column}_df2'])

    # Merge the final filtered data with the combined entity data
    final_output = pd.merge(final_df, combined_df, on=common_columns)

    return final_output

# Example usage
df1 = pd.DataFrame({
    'A': [1, 2, 3, 1, 2],
    'B': [4, 5, 6, 4, 5],
    'C': [7, 8, 9, 7, 8],
    'D': [10, 11, 12, 10, 11],
    'Amount': [100, 200, 300, 400, 500],
    'entity': ['E1', 'E2', 'E3', 'E1', 'E2']
})

df2 = pd.DataFrame({
    'A': [1, 2, 3, 1, 2],
    'B': [4, 5, 6, 4, 5],
    'C': [7, 8, 9, 7, 8],
    'D': [10, 11, 12, 10, 11],
    'Amount': [100, 200, 300, 400, 500],
    'entity': ['E4', 'E5', 'E6', 'E4', 'E5']
})

common_columns = ['A', 'B', 'C', 'D']
entity_column = 'entity'

result = filter_and_merge_dataframes(df1, df2, common_columns, entity_column)
print(result)
