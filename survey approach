from pptx import Presentation
from pptx.chart.data import CategoryChartData
from pptx.enum.chart import XL_CHART_TYPE
from pptx.util import Inches

# Sample data for the bar chart
categories = ['Apples', 'Oranges', 'Pears', 'Bananas']
values = [50, 30, 40, 60]

# Load the PowerPoint file (make sure it has at least one slide with a chart)
ppt_file = 'template.pptx'  # Update this to your PowerPoint template path
prs = Presentation(ppt_file)

# Assuming the template has at least one slide with a chart
slide = prs.slides[0]  # Get the first slide with the chart
chart = slide.shapes[0].chart  # Get the first chart on the slide

# Update the chart data
data = CategoryChartData()
data.categories = categories
data.add_series('Fruit Sales', values)

# Assign new data to the chart
chart.replace_data(data)

# Save the updated presentation
prs.save('updated_presentation.pptx')

********************

import pandas as pd
from pptx import Presentation
from pptx.chart.data import CategoryChartData
from pptx.enum.shapes import MSO_SHAPE_TYPE

# Sample data simulating an Excel read
data = {
    'Title': ['Sales Report 2022'],
    'Categories': ['Q1', 'Q2', 'Q3', 'Q4'],
    'Sales': [150, 200, 175, 225]
}
df = pd.DataFrame(data)

# Load the presentation and select the first slide
ppt_file = 'template.pptx'  # Update this to your PowerPoint template path
prs = Presentation(ppt_file)
slide = prs.slides[0]

# Handling placeholders, ensuring correct identification
for placeholder in slide.placeholders:
    if placeholder.shape_type == MSO_SHAPE_TYPE.PICTURE_FRAME:
        text_placeholder = placeholder
    elif placeholder.shape_type == MSO_SHAPE_TYPE.CHART:
        chart_placeholder = placeholder

# Update the text placeholder
if 'text_placeholder' in locals():
    text_placeholder.text = df['Title'].iloc[0]

# Handle the chart data update
if 'chart_placeholder' in locals():
    chart = chart_placeholder.chart
    chart_data = CategoryChartData()
    chart_data.categories = df['Categories'].tolist()
    chart_data.add_series('Sales', df['Sales'].tolist())
    chart.replace_data(chart_data)
else:
    print("No chart placeholder found")

# Save the updated presentation
prs.save('updated_presentation.pptx')
